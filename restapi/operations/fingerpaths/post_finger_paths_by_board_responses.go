// Code generated by go-swagger; DO NOT EDIT.

package fingerpaths

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostFingerPathsByBoardCreatedCode is the HTTP code returned for type PostFingerPathsByBoardCreated
const PostFingerPathsByBoardCreatedCode int = 201

/*PostFingerPathsByBoardCreated fingerpaths added

swagger:response postFingerPathsByBoardCreated
*/
type PostFingerPathsByBoardCreated struct {
}

// NewPostFingerPathsByBoardCreated creates PostFingerPathsByBoardCreated with default headers values
func NewPostFingerPathsByBoardCreated() *PostFingerPathsByBoardCreated {

	return &PostFingerPathsByBoardCreated{}
}

// WriteResponse to the client
func (o *PostFingerPathsByBoardCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// PostFingerPathsByBoardBadRequestCode is the HTTP code returned for type PostFingerPathsByBoardBadRequest
const PostFingerPathsByBoardBadRequestCode int = 400

/*PostFingerPathsByBoardBadRequest no associated board

swagger:response postFingerPathsByBoardBadRequest
*/
type PostFingerPathsByBoardBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostFingerPathsByBoardBadRequest creates PostFingerPathsByBoardBadRequest with default headers values
func NewPostFingerPathsByBoardBadRequest() *PostFingerPathsByBoardBadRequest {

	return &PostFingerPathsByBoardBadRequest{}
}

// WithPayload adds the payload to the post finger paths by board bad request response
func (o *PostFingerPathsByBoardBadRequest) WithPayload(payload interface{}) *PostFingerPathsByBoardBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post finger paths by board bad request response
func (o *PostFingerPathsByBoardBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFingerPathsByBoardBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
